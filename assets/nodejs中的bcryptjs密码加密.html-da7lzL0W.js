import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,o as a,d as n}from"./app-DdiZsM7o.js";const i={},t=n(`<h1 id="node-js-中-bcryptjs-密码加密" tabindex="-1"><a class="header-anchor" href="#node-js-中-bcryptjs-密码加密"><span>Node.js 中 bcryptjs 密码加密</span></a></h1><hr><p>bcryptjs 是一个第三方密码加密库，是对原有 bcrypt 的优化，优点是不需要安装任何依赖</p><p><a href="https://link.segmentfault.com/?enc=t12iw6PhsxVohksKmvEc5Q%3D%3D.jI2OBEC5CRglOXqHwvcxADnlRE%2B7bJ9RIBjV7GkpC34gC5PKucNfr%2F9oBylTD5FM" target="_blank" rel="noopener noreferrer">npmjs 地址</a></p><h3 id="引入-bcryptjs-库" tabindex="-1"><a class="header-anchor" href="#引入-bcryptjs-库"><span>引入 bcryptjs 库</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>npm install bcryptjs</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>var bcrypt = require(&#39;bcryptjs&#39;);</span></span>
<span class="line"><span>...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="同步用法-sync" tabindex="-1"><a class="header-anchor" href="#同步用法-sync"><span>同步用法 (Sync)</span></a></h3><p>生成 hash 密码</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>var bcrypt = require(&#39;bcryptjs&#39;);</span></span>
<span class="line"><span>var salt = bcrypt.genSaltSync(10);</span></span>
<span class="line"><span>var hash = bcrypt.hashSync(&quot;B4c0/\\/&quot;, salt);</span></span>
<span class="line"><span>// Store hash in your password DB.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>密码验证</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>// Load hash from your password DB. </span></span>
<span class="line"><span>bcrypt.compareSync(&quot;B4c0/\\/&quot;, hash); // true </span></span>
<span class="line"><span>bcrypt.compareSync(&quot;not_bacon&quot;, hash); // false</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>快速生成 hash 值</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>var hash = bcrypt.hashSync(&#39;bacon&#39;, 8);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="异步用法-async" tabindex="-1"><a class="header-anchor" href="#异步用法-async"><span>异步用法 (Async)</span></a></h3><p>生成 hash 密码</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>var bcrypt = require(&#39;bcryptjs&#39;);</span></span>
<span class="line"><span>bcrypt.genSalt(10, function(err, salt) {</span></span>
<span class="line"><span>    bcrypt.hash(&quot;B4c0/\\/&quot;, salt, function(err, hash) {</span></span>
<span class="line"><span>        // Store hash in your password DB. </span></span>
<span class="line"><span>    });</span></span>
<span class="line"><span>});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>密码验证</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>// Load hash from your password DB. </span></span>
<span class="line"><span>bcrypt.compare(&quot;B4c0/\\/&quot;, hash, function(err, res) {</span></span>
<span class="line"><span>    // res === true </span></span>
<span class="line"><span>});</span></span>
<span class="line"><span>bcrypt.compare(&quot;not_bacon&quot;, hash, function(err, res) {</span></span>
<span class="line"><span>    // res === false </span></span>
<span class="line"><span>});</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>// As of bcryptjs 2.4.0, compare returns a promise if callback is omitted: </span></span>
<span class="line"><span>bcrypt.compare(&quot;B4c0/\\/&quot;, hash).then((res) =&gt; {</span></span>
<span class="line"><span>    // res === true </span></span>
<span class="line"><span>});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>快速生成 hash 值</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>bcrypt.hash(&#39;bacon&#39;, 8, function(err, hash) {</span></span>
<span class="line"><span>});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,21),r=[t];function l(p,c){return a(),e("div",null,r)}const o=s(i,[["render",l],["__file","nodejs中的bcryptjs密码加密.html.vue"]]),b=JSON.parse('{"path":"/study/wlong%E5%8D%B3%E6%97%B6%E9%80%9A%E8%AE%AF%E7%AC%94%E8%AE%B0/nodejs%E4%B8%AD%E7%9A%84bcryptjs%E5%AF%86%E7%A0%81%E5%8A%A0%E5%AF%86.html","title":"Node.js 中 bcryptjs 密码加密","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2022-01-11T00:00:00.000Z","category":["Node.js"],"tag":["Node.js","Express","bcryptjs"],"description":"Node.js 中 bcryptjs 密码加密 bcryptjs 是一个第三方密码加密库，是对原有 bcrypt 的优化，优点是不需要安装任何依赖 npmjs 地址 引入 bcryptjs 库 同步用法 (Sync) 生成 hash 密码 密码验证 快速生成 hash 值 异步用法 (Async) 生成 hash 密码 密码验证 快速生成 hash 值","head":[["meta",{"property":"og:url","content":"http://www.sxkjxy.cc/study/wlong%E5%8D%B3%E6%97%B6%E9%80%9A%E8%AE%AF%E7%AC%94%E8%AE%B0/nodejs%E4%B8%AD%E7%9A%84bcryptjs%E5%AF%86%E7%A0%81%E5%8A%A0%E5%AF%86.html"}],["meta",{"property":"og:site_name","content":"Ron 个人博客"}],["meta",{"property":"og:title","content":"Node.js 中 bcryptjs 密码加密"}],["meta",{"property":"og:description","content":"Node.js 中 bcryptjs 密码加密 bcryptjs 是一个第三方密码加密库，是对原有 bcrypt 的优化，优点是不需要安装任何依赖 npmjs 地址 引入 bcryptjs 库 同步用法 (Sync) 生成 hash 密码 密码验证 快速生成 hash 值 异步用法 (Async) 生成 hash 密码 密码验证 快速生成 hash 值"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-22T10:57:01.000Z"}],["meta",{"property":"article:author","content":"Mr.Ron"}],["meta",{"property":"article:tag","content":"Node.js"}],["meta",{"property":"article:tag","content":"Express"}],["meta",{"property":"article:tag","content":"bcryptjs"}],["meta",{"property":"article:published_time","content":"2022-01-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-22T10:57:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Node.js 中 bcryptjs 密码加密\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-01-11T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-22T10:57:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Ron\\",\\"url\\":\\"https://github.com/wuwenlong12/ron-blog\\"}]}"]]},"headers":[{"level":3,"title":"引入 bcryptjs 库","slug":"引入-bcryptjs-库","link":"#引入-bcryptjs-库","children":[]},{"level":3,"title":"同步用法 (Sync)","slug":"同步用法-sync","link":"#同步用法-sync","children":[]},{"level":3,"title":"异步用法 (Async)","slug":"异步用法-async","link":"#异步用法-async","children":[]}],"git":{"createdTime":1724324221000,"updatedTime":1724324221000,"contributors":[{"name":"zhou","email":"2785444823@qq.com","commits":1}]},"readingTime":{"minutes":0.79,"words":237},"filePathRelative":"study/wlong即时通讯笔记/nodejs中的bcryptjs密码加密.md","localizedDate":"2022年1月11日","excerpt":"\\n<hr>\\n<p>bcryptjs 是一个第三方密码加密库，是对原有 bcrypt 的优化，优点是不需要安装任何依赖</p>\\n<p><a href=\\"https://link.segmentfault.com/?enc=t12iw6PhsxVohksKmvEc5Q%3D%3D.jI2OBEC5CRglOXqHwvcxADnlRE%2B7bJ9RIBjV7GkpC34gC5PKucNfr%2F9oBylTD5FM\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">npmjs 地址</a></p>\\n<h3>引入 bcryptjs 库</h3>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>npm install bcryptjs</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{o as comp,b as data};
